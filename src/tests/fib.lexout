ReservedWord, class
ID, Program
Delimiter, {
ReservedWord, public
ReservedWord, static
ReservedWord, void
ReservedWord, main
Delimiter, (
ReservedWord, String
Delimiter, [
Delimiter, ]
ID, args
Delimiter, )
Delimiter, {
ID, Fibonacci
ID, fib
Delimiter, =
ReservedWord, new
ID, Fibonacci
Delimiter, (
Delimiter, )
Delimiter, ;
ReservedWord, int
ID, n
Delimiter, =
Integer, 15
Delimiter, ;
ReservedWord, while
Delimiter, (
ID, n
Delimiter, )
Delimiter, {
ReservedWord, System.out.println
Delimiter, (
ID, fib
Delimiter, .
ID, fibRecursive
Delimiter, (
ID, n
Delimiter, )
Delimiter, )
Delimiter, ;
ReservedWord, System.out.println
Delimiter, (
ID, fib
Delimiter, .
ID, fibIterative
Delimiter, (
ID, n
Delimiter, )
Delimiter, )
Delimiter, ;
ID, n
Delimiter, =
ID, n
Operator, -
Integer, 5
Delimiter, ;
Delimiter, }
Delimiter, }
Delimiter, }
ReservedWord, class
ID, Fibonacci
Delimiter, {
ReservedWord, public
ReservedWord, int
ID, fibRecursive
Delimiter, (
ReservedWord, int
ID, n
Delimiter, )
Delimiter, {
ReservedWord, int
ID, res
Delimiter, =
ID, n
Delimiter, ;
ReservedWord, if
Delimiter, (
ID, n
Operator, >=
Integer, 2
Delimiter, )
ID, res
Delimiter, =
ReservedWord, this
Delimiter, .
ID, fibRecursive
Delimiter, (
ID, n
Operator, -
Integer, 1
Delimiter, )
Operator, +
ReservedWord, this
Delimiter, .
ID, fibRecursive
Delimiter, (
ID, n
Operator, -
Integer, 2
Delimiter, )
Delimiter, ;
ReservedWord, return
ID, res
Delimiter, ;
Delimiter, }
ReservedWord, public
ReservedWord, int
ID, fibIterative
Delimiter, (
ReservedWord, int
ID, n
Delimiter, )
Delimiter, {
ReservedWord, int
ID, i
Delimiter, =
Integer, 0
Delimiter, ;
ReservedWord, int
ID, j
Delimiter, =
Integer, 1
Delimiter, ;
ReservedWord, while
Delimiter, (
ID, n
Delimiter, )
Delimiter, {
ID, j
Delimiter, =
ID, j
Operator, +
ID, i
Delimiter, ;
ID, i
Delimiter, =
ID, j
Operator, -
ID, i
Delimiter, ;
ID, n
Delimiter, =
ID, n
Operator, -
Integer, 1
Delimiter, ;
Delimiter, }
ReservedWord, return
ID, j
Delimiter, ;
Delimiter, }
Delimiter, }
